Geralmente quando as pessoas pensam em aplicar o aprendizado de máquina ao mercado de ações, elas geralmente pensam sobre isso em termos de previsão do valor de uma ação, que inclui apenas a direção, como se ela vai subir amanhã ou amanhã.

É claro que essa informação por si só não faz nada fisicamente. Você ainda precisa se sentar no seu computador e fazer uma troca. Se estamos falando sobre negociação automatizada de alta frequência, essa é uma história diferente. Mesmo assim, digamos que seu modelo preveja que as ações que você está vendo aumentem amanhã.

Isso significa que você fará uma troca. Talvez. Mas e se você estiver ocupado e esquecer. Ou, e se você acredita que vai subir apenas um pouco e depois diminuir rapidamente, provavelmente você não deseja comprar essas ações.

Posso prever o preço das ações de amanhã, mas ainda tenho que escolher se vou agir com base nessas informações ou não. O aprendizado por reforço, por outro lado, não apenas faz previsões, mas também executa ações no ambiente que você fornece.

Atualmente, você provavelmente pensa nos preços das ações como um simples conjunto de dados de séries temporais. Parece mais apropriado para uma rede neural recorrente do que para o aprendizado por reforço.

O ambiente é o mercado de ações atual. É inerentemente aleatório, porque você realmente não pode prever o que acontecerá com o preço das ações de amanhã, mas suas ações afetam o meio ambiente.

Em outras palavras, esses são todos os ingredientes que precisamos para especificar nosso problema como um problema de aprendizado por reforço. Podemos realizar ações como comprar e vender no meio ambiente e nosso estado é composto de informações sobre várias ações em nosso próprio portfólio e o ambiente é o próprio mercado de ações. A recompensa é uma função do dinheiro que ganhamos ou perdemos algo útil para tentar.


2. Execução

Dê o comando 

pip install -r requirements.txt

python rl_trader.py -m train && python plot_rl_rewards.py -m train && python rl_trader.py -m test && python plot_rl_rewards.py -m test


E aguarde


3. Discussão


Discutiremos alguns resultados adicionais da negociação. Você pode pensar porque esse agente quase sempre gera lucro. Deve ser um agente realmente bom. No entanto, existem coisas que ainda não consideramos primeiro para realmente avaliar o agente.

Temos que ter algo para compará-lo a uma referência razoável, acho que é para ver como um agente completamente aleatório executa o equivalente à execução de um script com Epsilon igual a um ou a não ter um agente.

A maior parte do peso da distribuição está acima do nosso investimento inicial, o que significa que, mesmo com uma estratégia totalmente aleatória, provavelmente ganharíamos dinheiro, mas também existem alguns valores muito baixos aqui, onde nós perdemos dinheiro.

A probabilidade de isso acontecer não é insignificante. Em média, no entanto, o lucro ainda não é ruim se comparado ao nosso agente treinado. Nosso agente treinado tem um desempenho muito melhor, a probabilidade de perder dinheiro é muito menor e o piso é apenas um pouco abaixo do investimento inicial.

Obviamente, isso realmente depende dos hiper parâmetros que você escolhe e dos valores finais dos pesos. E, às vezes, se você executar o script, ainda poderá obter resultados que não são muito melhores do que aleatórios. Agora você provavelmente está se perguntando como é que, mesmo que tomemos ações puramente aleatórias, ainda podemos obter um lucro decente.

Bem, isso tem a ver com nosso conjunto de dados em geral para as três ações que escolhemos. O valor está aumentando. Portanto, não importa realmente o que fazemos, a menos que sempre compremos infelizmente quando as ações estão altas e vendemos quando as ações estão baixas.

Mas se a ação está subindo principalmente, há menos chances de isso acontecer. Portanto, uma coisa que você pode fazer se realmente quiser testar isso é testá-lo em um conjunto de ações que sobe e desce um conjunto de dados sintéticos seria uma ótima opção aqui. Aqui estão algumas outras maneiras pelas quais você pode estender este projeto. Um que você pode incorporar metadados também, como o sentimento de artigos de notícias ou feeds do Twitter.

É claro que isso agora se torna um problema de engenharia, porque você precisa reunir todos esses dados todos os dias no período de cinco anos para outra coisa que você pode fazer é incorporar valores passados ​​ao estado. Atualmente, o modelo não tem nenhum conceito do movimento dos preços das ações. Ele conhece apenas os preços atuais das ações. Você pode tentar usar devoluções em vez de preços reais. Se você se lembra das redes neurais, não é tão bom assim em extrapolar para regressão. Podemos observar esse padrão criando um conjunto de dados sintético e observando o que um neurônio que funciona quando vê uma saída fora do intervalo. Foi treinado com esses preços das ações, que estão sempre subindo, o que deve acontecer. Os retornos, no entanto, devem ser mais estacionários.